---


- name: Install PHP, nginx, memcached
  action: apt pkg={{item}} state=installed
  with_items:
    - nginx
    - php7.0-fpm
    - php7.0-mysql
    - php7.0-mbstring
    - php7.0-simplexml
    - php7.0-curl
    - php7.0-zip
    - php7.0-memcached
    - php7.0-gd
    - memcached
    - python-openssl

- name: Have PHP use memcached for session storage
  lineinfile:
    path: /etc/php/7.0/fpm/php.ini
    regexp: "session.save_handler"
    line: "session.save_handler = memcached"
  notify: restart php-fpm

- name: Disable PHP file caching for development
  lineinfile:
    path: /etc/php/7.0/fpm/php.ini
    regexp: "^realpath_cache_ttl.*"
    insertafter: ".*realpath_cache_ttl.*"
    line: "realpath_cache_ttl = 0"
  notify: restart php-fpm
  when: vagrant or inventory_hostname == "localhost"

- name: Use local memcached
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "session.save_path"
    line: "session.save_path = localhost:11211"
  notify: restart php-fpm

- name: PHP display_errors
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "display_errors"
    line: "display_errors = On"
  notify: restart php-fpm

- name: PHP display_startup_errors
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "display_startup_errors"
    line: "display_startup_errors = On"
  notify: restart php-fpm

- name: PHP error_reporting
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "error_reporting"
    line: "error_reporting = E_ALL"
  notify: restart php-fpm

- name: PHP error_log
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "error_log"
    line: "error_log = /tmp/php-error.log"
  notify: restart php-fpm

- name: Generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem
  when: not vagrant

- name: Create RSA key for selfsigned cert
  openssl_privatekey:
    path: /etc/nginx/selfsign_key.pem
  register: selfsign_key # exposes size, filename, type, fingerprint

- name: Create CSR for selfsigned (test.)hdcoin.co cert
  openssl_csr:
    path: /etc/nginx/selfsign_csr.pem
    privatekey_path: /etc/nginx/selfsign_key.pem
    country_name: NZ
    locality_name: Auckland
    organization_name: "Robotic Accounting"
    common_name: "roboticaccounting.localhost"
    email_address: "guy@hd.net.nz"
  register: selfsign_csr # exposes keyUsage,extendedKeyUsage,subjectAltName,subject,privatekey,filename

- name: Create selfsigned cert for roboticaccounting.localhost
  openssl_certificate:
    path: "/etc/nginx/selfsign_cert.pem"
    csr_path: "/etc/nginx/selfsign_csr.pem"
    privatekey_path: "/etc/nginx/selfsign_key.pem"
    provider: selfsigned
  register: selfsign_cert # exposes filename



- name: Disable sendfile in nginx (for Virtualbox compatibilty)
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: ".*sendfile.*"
    line: "\tsendfile off;"
  notify: restart nginx

- name: Nginx default host
  template:
    src: templates/nginx-default.j2
    dest: /etc/nginx/sites-available/default
  notify:
    - restart nginx

- name: Nginx SSL settings
  template:
    src: templates/nginx-ssl.conf.j2
    dest: /etc/nginx/conf.d/ssl.conf
  notify:
    - restart nginx

- name: ensure /var/www exists
  file:
    path: /var/www
    state: directory

- name: synchronise html/ to /var/www/html/
  synchronize:
    src: "html/"
    dest: "/var/www/html/"
    owner: 0
    group: 0
    delete: 1
  when: not vagrant and inventory_hostname != "localhost"

- name: get rid of /var/www/html/ so we can symlink
  file:
    path: /var/www/html
    state: absent
  when: vagrant  or inventory_hostname == "localhost"

- name: symlink html/ to /var/www/html/ instead
  file:
    state: link
    path: /var/www/html
    src: /{{repo_basepath}}/html
  when: vagrant or inventory_hostname == "localhost"

- name: Create templates_c tmpdir
  file:
    state: directory
    path: /tmp/templates_c
    mode: 0777

- name: Set correct permissions on attachments directory
  file:
    state: directory
    path: /var/www/html/attachments
    mode: 0777

- name: set mariadb root pass
  debconf:
    name: mariadb-server-10.2
    question: mysql-server/root_password
    value: rootpass
    vtype: string

- name: set mariadb root pass again
  debconf:
    name: mariadb-server-10.2
    question: mysql-server/root_password_again
    value: rootpass
    vtype: string

- name: install mariadb-server
  apt:
    package: mariadb-server
    state: installed

- name: install python-mysqldb
  apt:
    package: python-mysqldb
    state: installed

- name: add /root/.my.cnf
  template:
    src: templates/my.cnf.j2
    dest: /root/.my.cnf
    mode: 0400

- name: Copy database to tmp
  copy:
    src: db/
    dest: /tmp/ra_db/

- name: Purge RA database
  mysql_db:
    name: ra
    state: absent
  when: "{{ vagrant | bool | default(false) }}"

- name: Template MySQL changes for deployment (recaptcha)
  template:
    src: templates/999_robotacct_template.sql.j2
    dest: /tmp/ra_db/999_robotacct_template.sql

- name: Add RA database
  action: mysql_db name="ra" state=import target=/tmp/ra_db/{{item}}
  with_items:
    - 01_robotacct_schema.sql
    - 02_robotacct_data.sql
    - 951_tblclients.sql
    - 952_tblconfiguration.sql
    - 999_robotacct_template.sql
    - 953_tblcustomerservicechanges.sql
  when: "{{ vagrant | bool | default(false) }}"

- name: Create RA DB user
  mysql_user:
    name: "ra"
    state: present
    priv: '*.*:ALL,GRANT'
    password: "rapassword"

- name: WHMCS configuration.php
  template:
    src: templates/configuration.php.j2
    dest: /var/www/html/configuration.php
  when: "{{vagrant | bool | default(false)}}"

- name: WHMCS cronjob
  cron:
    name: "WHMCS admin/cron.php"
    minute: "*/5"
    hour: "*"
    job: "/usr/bin/php -f /var/www/html/admin/cron.php"
    user: "www-data"
  notify: restart cron

- name: WHMCS mail to ticket import cronjob
  cron:
    name: "WHMCS mail to ticket import cronjob"
    minute: "*"
    hour: "*"
    job: "/usr/bin/php -f /var/www/html/pipe/pop.php"
    user: "www-data"
  notify: restart cron

- name: templates cache dir
  file:
    path: /var/www/html/templates_c
    state: directory
    mode: 0777

# vim: ai ts=2 sts=2 et sw=2
