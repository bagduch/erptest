---

- name: remove default apt repo
  apt_repository:
    repo: deb http://httpredir.debian.org/debian stretch main
    state: absent

- name: add mirror.hd.net.nz/debian repo
  apt_repository: 
    repo: deb http://mirror.hd.net.nz/debian stretch main contrib non-free
    state: present

- name: add cdn-fastly.deb.debian.org/debian-security repo
  apt_repository: 
    repo: deb http://cdn-fastly.deb.debian.org/debian-security stretch/updates main
    state: present

- name: Install Base Required Packages
  action: apt pkg={{item}} state=installed
  with_items:
    - vim
    - curl
    - rsync
    - apt-transport-https
    - lsb-release
    - ca-certificates

- name: add mariadb apt repo keys
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: "F1656F24C74CD1D8"

    # https://downloads.mariadb.org/mariadb/repositories/#mirror=aarnet_pty_ltd&distro=Debian&distro_release=stretch--stretch&version=10.2
- name: add mariadb repo
  apt_repository: 
    repo: deb http://mirror.aarnet.edu.au/pub/MariaDB/repo/10.2/debian stretch main
    state: present


- name: add sury PHP7 apt repo key
  get_url:
    url: https://packages.sury.org/php/apt.gpg
    dest: /etc/apt/trusted.gpg.d/php.gpg

- name: add sury PHP7 apt repo
  apt_repository:
    repo: deb https://packages.sury.org/php/ stretch main
    state: present


- name: install aptitude
  apt: 
    name: aptitude
    state: present

- name: Upgrade to latest debian packages
  apt:
    upgrade: yes
    update_cache: yes   

- name: Install PHP, nginx, memcached
  action: apt pkg={{item}} state=installed
  with_items:
    - nginx
    - php7.0-fpm
    - php7.0-mysql
    - php7.0-mbstring
    - php7.0-simplexml
    - php7.0-curl
    - php7.0-zip
    - php7.0-memcached
    - memcached

- name: Have PHP use memcached for session storage
  lineinfile:
    path: /etc/php/7.0/fpm/php.ini
    regexp: "session.save_handler"
    line: "session.save_handler = memcached"
  notify: restart php-fpm

- name: Use local memcached
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "session.save_path"
    line: "session.save_path = localhost:11211"
  notify: restart php-fpm

- name: PHP display_errors
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "display_errors"
    line: "display_errors = On"
  notify: restart php-fpm

- name: PHP display_startup_errors
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "display_startup_errors"
    line: "display_startup_errors = On"
  notify: restart php-fpm

- name: PHP error_reporting
  lineinfile:
    path: "/etc/php/7.0/fpm/php.ini"
    regexp: "error_reporting"
    line: "error_reporting = E_ALL"
  notify: restart php-fpm

- name: Disable sendfile in nginx (for Virtualbox compatibilty)
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: ".*sendfile.*"
    line: "\tsendfile off;"

- name: Nginx default host
  template:
    src: templates/nginx-default.j2
    dest: /etc/nginx/sites-available/default
  notify:
    - restart nginx
    - restart php-fpm

- name: ensure /var/www exists
  file:
    path: /var/www
    state: directory

- name: synchronise html/ to /var/www/html/
  synchronize:
    src: "html/"
    dest: "/var/www/html/"
    owner: 0
    group: 0
    delete: 1
  when: not vagrant

- name: get rid of /var/www/html/ so we can symlink
  file:
    path: /var/www/html
    state: absent
  when: vagrant

- name: symlink html/ to /var/www/html/ instead
  file:
    state: link
    path: /var/www/html
    src: /vagrant/html
  when: vagrant

- name: Create templates_c tmpdir
  file:
    state: directory
    path: /tmp/templates_c
    mode: 0777

- name: set mariadb root pass
  debconf:
    name: mariadb-server-10.2
    question: mysql-server/root_password
    value: rootpass
    vtype: string

- name: set mariadb root pass again
  debconf:
    name: mariadb-server-10.2
    question: mysql-server/root_password_again
    value: rootpass
    vtype: string

- name: install mariadb-server
  apt:
    package: mariadb-server
    state: installed

- name: install python-mysqldb
  apt:
    package: python-mysqldb
    state: installed

- name: add /root/.my.cnf
  template:
    src: templates/my.cnf.j2
    dest: /root/.my.cnf
    mode: 0400

- name: Copy database to tmp
  copy:
    src: db/
    dest: /tmp/ra_db/

- name: Purge RA database
  mysql_db:
    name: ra
    state: absent

- name: Template MySQL changes for deployment (recaptcha)
  template:
    src: templates/999_robotacct_template.sql.j2
    dest: /tmp/ra_db/999_robotacct_template.sql

- name: Add RA database
  action: mysql_db name="ra" state=import target=/tmp/ra_db/{{item}} 
  with_items:
    - 01_robotacct_schema.sql
    - 02_robotacct_data.sql
    - 951_tblclients.sql
    - 952_tblconfiguration.sql
    - 999_robotacct_template.sql


- name: Create RA DB user
  mysql_user:
    name: "ra"
    state: present
    priv: '*.*:ALL,GRANT'
    password: "rapassword"

- name: WHMCS configuration.php
  template:
    src: templates/configuration.php.j2
    dest: /var/www/html/configuration.php

- name: templates cache dir
  file:
    path: /var/www/html/templates_c
    state: directory
    mode: 0777


- include_tasks: maildev.yml
  # vim: ai ts=2 sts=2 et sw=2
